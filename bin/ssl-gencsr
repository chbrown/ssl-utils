#!/usr/bin/env bash
set -e # exit immediately on error

usage() {
  >&2 cat <<HELP
Usage: $(basename "$0") example.com.config example.com.key [-o|--out example.com.csr]

Generate a certificate signing request from .config and .key files.

Options:
 -o, --out FILE  Write CSR to FILE
HELP
}

OUTPUT=/dev/stdout
while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help)
      usage
      exit 0
      ;;
    *.config)
      CONFIG=$1
      if [[ ! -e $CONFIG ]]; then
        >&2 printf 'The .config file, "%s", does not exist.\n' "$CONFIG"
        exit 1
      fi
      ;;
    *.key)
      KEY=$1
      if [[ ! -e $KEY ]]; then
        >&2 printf 'The .key file, "%s", does not exist.\n' "$KEY"
        exit 1
      fi
      ;;
    -o|--output)
      shift
      OUTPUT=$1
      ;;
    *)
      usage
      >&2 printf '\nUnrecognized command line argument: "%s"\n' "$1"
      exit 1
      ;;
  esac
  shift
done

if [[ -z ${CONFIG+missing} || -z ${KEY+missing} ]]; then
  usage
  >&2 printf '\nYou must supply both .config and .key input files.\n'
  exit 1
fi

openssl req -new -sha256 -config "$CONFIG" -reqexts v3_ca -key "$KEY" > "$OUTPUT"

if [[ -f "$OUTPUT" ]]; then
  # print details about the certificate signing request it just created
  openssl req -text -noout -in "$OUTPUT"
fi
